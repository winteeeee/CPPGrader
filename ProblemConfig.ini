# 구분자 ,
# 옵션 0 : 모두 컴파일, 1 : 하나만 컴파일

[Problem]
name = 1.mergeArray,2.learn2dimensionArray,3.3digitMultiplication,4.findCharPosition,5.getMinMax,6.runMatrix,7.runFraction
size = 7

[1.mergeArray]
size = 2
inputPath = 테스트케이스/1.mergeArray/1-1.in,테스트케이스/1.mergeArray/1-2.in
outputPath = 테스트케이스/1.mergeArray/1-1.out,테스트케이스/1.mergeArray/1-2.out
mainPath = 메인/mergeMain.cpp,메인/mergeMain.cpp
argvPath =

[2.learn2dimensionArray]
size = 1
inputPath =
outputPath = 테스트케이스/2.learn2dimensionArray/2-1.out
mainPath = 메인/2-1main.cpp
argvPath =

[3.3digitMultiplication]
size = 1
inputPath = 테스트케이스/3.3digitMultiplication/3-1.in
outputPath = 테스트케이스/3.3digitMultiplication/3-1.out
mainPath =
argvPath =

[4.findCharPosition]
size = 1
inputPath = 테스트케이스/4.findCharPosition/4-1.in
outputPath = 테스트케이스/4.findCharPosition/4-1.out
mainPath =
argvPath =

[5.getMinMax]
size = 2
inputPath = 테스트케이스/5.getMinMax/5-1.in,테스트케이스/5.getMinMax/5-2.in
outputPath = 테스트케이스/5.getMinMax/5-1.out,테스트케이스/5.getMinMax/5-2.out
mainPath = 메인/minMaxMain.cpp,메인/minMaxMain.cpp
argvPath =

[6.runMatrix]
size = 1
inputPath = 테스트케이스/6.runMatrix/6-1.in
outputPath = 테스트케이스/6.runMatrix/6-1.out
mainPath = 메인/matrixMain.cpp
argvPath =

[7.runFraction]
size = 5
inputPath =
outputPath = 테스트케이스/7.runFraction/7-1.out,테스트케이스/7.runFraction/7-2.out,테스트케이스/7.runFraction/7-3.out,테스트케이스/7.runFraction/7-4.out,테스트케이스/7.runFraction/7-5.out
mainPath = 메인/7-1main.cpp,메인/7-2main.cpp,메인/7-3main.cpp,메인/7-4main.cpp,메인/7-5main.cpp
argvPath =